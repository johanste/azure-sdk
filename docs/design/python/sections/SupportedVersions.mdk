## Supported Python versions

~ Must
<<<<<<< HEAD
support Python 2.7 and 3.5.3+. You **should** provide a single [universal](https://packaging.python.org/guides/distributing-packages-using-setuptools/#id75) package that works on all supportede versions, unless there is a compelling reason to have separate Python 2 and 3 packages.

*One example of where having separate packages is if you depend on different external packages for Python 2 and Python 3, and neither external dependency is available for both Python versions.*
~

~ May
provide separate version specific packages (e.g. one for Python2 and one for Python3).
~

~ Must
provide both source distributions (sdist) and wheels. The sdists and wheels **must** be published to PyPI.
=======
support Python 2.7 and 3.5.3+.
~

~ Should
provide a [universal](https://packaging.python.org/guides/distributing-packages-using-setuptools/#id75) package that works on all supported versions of Python, unless there's a compelling reason to have separate Python2 and Python3 packages.  

For example, if you depend on different external packages for Python2 and Python3, and neither external dependency is available for both Python versions.
~

~ Must
provide both source distributions (`sdist`) and wheels.
~

~ Must
publish both source distributions (`sdist`) and wheels to PyPI.
>>>>>>> upstream/master
~

~ Must
test correct behavior for both CPython and PyPy for [pure](https://packaging.python.org/guides/distributing-packages-using-setuptools/#id75) and [universal](https://packaging.python.org/guides/distributing-packages-using-setuptools/#universal-wheels) Python wheels. 
~

<<<<<<< HEAD
See the [Packaging](#python-packaging) section for more information on package naming and requirements.
=======
For more information on packaging naming, see the [Packaging](#python-packaging) section.
>>>>>>> upstream/master
